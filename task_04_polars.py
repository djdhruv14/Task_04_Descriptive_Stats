# -*- coding: utf-8 -*-
"""task 04_Polars.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14rxOtr1dcoJ_qarE1Aa8Atw-XsIPPkvs
"""

#1 Using facebook ads dataset
#!/usr/bin/env python3
"""
Descriptive statistics using pandas and Polars on the
2024_fb_ads_president_scored_anon.csv dataset.

Pandas Approach:
- DataFrame.describe() for numeric columns
- df.nunique() for unique counts per column
- df[col].value_counts() for top values of categorical columns

Polars Approach:
- df.describe() for numeric + non-numeric summary
- df.select(pl.all().n_unique()) for unique counts
- df[col].value_counts() for top values of each column
"""

# --- Pandas Approach ---
import pandas as pd

pandas_path = '2024_fb_ads_president_scored_anon.csv'
df = pd.read_csv(pandas_path)

print("=== Pandas: Numeric Summary (describe) ===")
print(df.describe())

print("\n=== Pandas: Unique Counts per Column (nunique) ===")
print(df.nunique())

print("\n=== Pandas: Top 5 Most Frequent Values for Categorical Columns ===")
for col in df.select_dtypes(exclude=['number']).columns:
    print(f"\n[{col}]")
    print(df[col].value_counts().head(5))


# --- Polars Approach ---
import polars as pl

polars_path = '2024_fb_ads_president_scored_anon.csv'
df_pl = pl.read_csv(polars_path)

print("\n=== Polars: Summary (describe) ===")
print(df_pl.describe())

print("\n=== Polars: Unique Counts per Column (n_unique) ===")
print(df_pl.select(pl.all().n_unique()))

print("\n=== Polars: Top 5 Most Frequent Values for Each Column ===")
for col in df_pl.columns:
    vc = df_pl[col].value_counts()
    print(f"\n[{col}]")
    print(vc.head(5))

#2 Using facebook posts dataset
#!/usr/bin/env python3
"""
Descriptive statistics using pandas and Polars on the
2024_fb_posts_president_scored_anon.csv dataset.

Pandas Approach:
- DataFrame.describe() for numeric columns
- df.nunique() for unique counts per column
- df[col].value_counts() for top values of categorical columns

Polars Approach:
- df.describe() for numeric + non-numeric summary
- df.select(pl.all().n_unique()) for unique counts
- df[col].value_counts() for top values of each column
"""

# --- Pandas Approach ---
import pandas as pd

# Path to the FB posts dataset
pandas_path = '2024_fb_posts_president_scored_anon.csv'
df = pd.read_csv(pandas_path)

# Numeric summary
print("=== Pandas: Numeric Summary (describe) ===")
print(df.describe())

# Unique counts per column
print("\n=== Pandas: Unique Counts per Column (nunique) ===")
print(df.nunique())

# Top 5 most frequent values for object/categorical columns
print("\n=== Pandas: Top 5 Most Frequent Values for Categorical Columns ===")
for col in df.select_dtypes(include=['object', 'category']).columns:
    print(f"\n[{col}]")
    print(df[col].value_counts().head(5))


# --- Polars Approach ---
import polars as pl

# Path to the FB posts dataset
polars_path = '2024_fb_posts_president_scored_anon.csv'
df_pl = pl.read_csv(polars_path)

# Polars summary
print("\n=== Polars: Summary (describe) ===")
print(df_pl.describe())

# Unique counts per column
print("\n=== Polars: Unique Counts per Column (n_unique) ===")
print(df_pl.select([pl.col(col).n_unique().alias(col) for col in df_pl.columns]))

# Top 5 most frequent values for each column
print("\n=== Polars: Top 5 Most Frequent Values for Each Column ===")
for col in df_pl.columns:
    vc = df_pl[col].value_counts()
    print(f"\n[{col}]")
    print(vc.head(5))

#3 Using twitter posts dataset
#!/usr/bin/env python3
"""
Descriptive statistics using pandas and Polars on the
2024_tw_posts_president_scored_anon.csv dataset.

The script performs:

Pandas Analysis:
- Load CSV via pandas.read_csv()
- Numeric summary: DataFrame.describe()
- Unique counts per column: DataFrame.nunique()
- Top 5 most frequent values for each categorical column: value_counts()

Polars Analysis:
- Load CSV via pl.read_csv()
- Summary for all columns: DataFrame.describe()
- Unique counts per column: DataFrame.select(pl.all().n_unique())
- Top 5 most frequent values for each column: Series.value_counts()
"""

import pandas as pd
import polars as pl

# Path to the Twitter posts dataset
TWITTER_PATH = '2024_tw_posts_president_scored_anon.csv'

# --- Pandas Analysis ---
def pandas_analysis(path):
    print("\n=== Pandas Analysis: Twitter Posts ===")
    df = pd.read_csv(path)

    # Numeric summary
    print("\n-- Numeric Summary (describe) --")
    print(df.describe())

    # Unique counts per column
    print("\n-- Unique Counts (nunique) --")
    print(df.nunique())

    # Top 5 categorical values
    print("\n-- Top 5 Most Frequent Values (value_counts) --")
    cat_cols = df.select_dtypes(include=['object', 'category']).columns
    for col in cat_cols:
        print(f"\n[{col}]")
        print(df[col].value_counts().head(5))

# --- Polars Analysis ---
def polars_analysis(path):
    print("\n=== Polars Analysis: Twitter Posts ===")
    df_pl = pl.read_csv(path)

    # Summary for all columns
    print("\n-- Summary (describe) --")
    print(df_pl.describe())

    # Unique counts per column
    print("\n-- Unique Counts (n_unique) --")
    uniques = df_pl.select([pl.col(c).n_unique().alias(c) for c in df_pl.columns])
    print(uniques)

    # Top 5 most frequent values per column
    print("\n-- Top 5 Most Frequent Values (value_counts) --")
    for col in df_pl.columns:
        print(f"\n[{col}]")
        print(df_pl[col].value_counts().head(5))


def main():
    try:
        pandas_analysis(TWITTER_PATH)
    except FileNotFoundError:
        print(f"Error: Twitter dataset not found at {TWITTER_PATH}")

    try:
        polars_analysis(TWITTER_PATH)
    except Exception as e:
        print(f"Error in Polars analysis: {e}")

if __name__ == '__main__':
    main()